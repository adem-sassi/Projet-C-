// <auto-generated />
using System;
using BooksAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksAPI.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20250611074940_InitWithDiscriminator")]
    partial class InitWithDiscriminator
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("BooksAPI.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medias");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Media");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BooksAPI.Models.Ebook", b =>
                {
                    b.HasBaseType("BooksAPI.Models.Media");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Ebook");
                });

            modelBuilder.Entity("BooksAPI.Models.PaperBook", b =>
                {
                    b.HasBaseType("BooksAPI.Models.Media");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("PaperBook");
                });
#pragma warning restore 612, 618
        }
    }
}
